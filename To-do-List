import tkinter as tk
from tkinter import messagebox, simpledialog

class ToDoListGUI:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List")
        self.tasks = []
        
        # Task Listbox
        self.listbox = tk.Listbox(root, width=50, height=10)
        self.listbox.pack(pady=10)
        
        # Buttons
        btn_frame = tk.Frame(root)
        btn_frame.pack()
        
        self.add_btn = tk.Button(btn_frame, text="Add Task", command=self.add_task)
        self.add_btn.grid(row=0, column=0, padx=5)
        
        self.view_btn = tk.Button(btn_frame, text="View Tasks", command=self.view_tasks)
        self.view_btn.grid(row=0, column=1, padx=5)
        
        self.remove_btn = tk.Button(btn_frame, text="Remove Task", command=self.remove_task)
        self.remove_btn.grid(row=0, column=2, padx=5)
        
        self.update_btn = tk.Button(btn_frame, text="Update Task", command=self.update_task)
        self.update_btn.grid(row=0, column=3, padx=5)
        
        self.done_btn = tk.Button(btn_frame, text="Mark as Done", command=self.mark_task_as_done)
        self.done_btn.grid(row=0, column=4, padx=5)
        
        self.view_done_btn = tk.Button(btn_frame, text="View Done Tasks", command=self.view_done_tasks)
        self.view_done_btn.grid(row=0, column=5, padx=5)
        
        self.exit_btn = tk.Button(root, text="Exit", command=root.quit)
        self.exit_btn.pack(pady=5)
    
    def add_task(self):
        task = simpledialog.askstring("Add Task", "Enter a new task:")
        if task:
            self.tasks.append(task)
            self.view_tasks()
            messagebox.showinfo("Success", f'Task "{task}" added.')
    
    def view_tasks(self):
        self.listbox.delete(0, tk.END)
        for idx, task in enumerate(self.tasks, 1):
            self.listbox.insert(tk.END, f"{idx}. {task}")
    
    def remove_task(self):
        try:
            selected_index = self.listbox.curselection()[0]
            removed_task = self.tasks.pop(selected_index)
            self.view_tasks()
            messagebox.showinfo("Removed", f'Task "{removed_task}" removed.')
        except IndexError:
            messagebox.showwarning("Warning", "Please select a task to remove.")
    
    def update_task(self):
        try:
            selected_index = self.listbox.curselection()[0]
            new_task = simpledialog.askstring("Update Task", "Enter new task:")
            if new_task:
                self.tasks[selected_index] = new_task
                self.view_tasks()
                messagebox.showinfo("Updated", "Task updated successfully.")
        except IndexError:
            messagebox.showwarning("Warning", "Please select a task to update.")
    
    def mark_task_as_done(self):
        try:
            selected_index = self.listbox.curselection()[0]
            self.tasks[selected_index] = f"[DONE] {self.tasks[selected_index]}"
            self.view_tasks()
            messagebox.showinfo("Marked", "Task marked as done.")
        except IndexError:
            messagebox.showwarning("Warning", "Please select a task to mark as done.")
    
    def view_done_tasks(self):
        done_tasks = [task for task in self.tasks if task.startswith("[DONE]")]
        if done_tasks:
            messagebox.showinfo("Completed Tasks", "\n".join(done_tasks))
        else:
            messagebox.showinfo("Completed Tasks", "No tasks marked as done yet.")

if __name__ == "__main__":
    root = tk.Tk()
    app = ToDoListGUI(root)
    root.mainloop()
